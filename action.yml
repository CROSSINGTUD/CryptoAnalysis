name: CogniCrypt - Static Spplication Security Testing
description: CogniCrypt takes rules written in the specification language CrySL as input, and performs a static analysis based on the specification of the rules.
inputs:
  basePath:
    description: "Path to relate paths in the analyzed jar and the source tree. Class \"com.example\" is searched for at \"basePath/com/example\"."
  rulesDir:
    description: "TODO"
    required: true
  appPath:
    description: "TODO"
    required: true
  cg:
    description: "Selection of call graph for analysis (possible values are CHA, SPARK, SPARKLIB)"
  sootPath:
    description: "Absolute path of the whole project"
  identifier:
    description: "Identifier for labeling output files"
  reportPath:
    description: "Directory Location for cryptoanalysis reports"
  reportFormat:
    description: "format of crytoanalysis reports (possible values are CMD, TXT, SARIF, CSV, CSV_SUMMARY)"
  preanalysis:
    description: "Enables pre-analysis"
  visualization :
    description: "Enables the visualization, but also requires reportPath option to be set"
  providerDetection :
    description: "Enables provider detection analysis"
  dstats:
    description: "Disables the output of the analysis statistics in the reports"

runs:
  using: "composite"
  steps:
    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-package: jdk
        java-version: '11'

    - name: Checkout source code
      uses: actions/checkout@v4
      with:
        repository: ${{ env.GH_ACTION_REPOSITORY }}
        ref: ${{ env.GH_ACTION_REF }}
        path: CryptoAnalysisBuild_98e04be6 # random string at the end to avoid any conflicts with the actual repo
      env:
        # workaround for https://github.com/actions/runner/issues/2473
        GH_ACTION_REPOSITORY: ${{ github.action_repository }}
        GH_ACTION_REF: ${{ github.action_ref }}

    - name: Calculate cache key
      id: cache-key
      shell: bash
      working-directory: CryptoAnalysisBuild_98e04be6
      run: echo "cache-key=CryptoAnalysis-$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
    - name: Restore CryptoAnalysis Cache
      id: cache
      uses: actions/cache/restore@v3
      with:
        path: CryptoAnalysisBuild_98e04be6/CryptoAnalysis.jar
        key: ${{ steps.cache-key.outputs.cache-key }}

    - name: Set up Maven
      if: steps.cache.outputs.cache-hit != 'true'
      uses: stCarolas/setup-maven@v4.5
      with:
        maven-version: 3.6.3

    # Fetch pre-compiled JAR from the maven repository
    - name: Download pre-compiled JAR
      id: download
      if: steps.cache.outputs.cache-hit != 'true'
      continue-on-error: true
      shell: bash
      run: mvn dependency:copy -Dartifact=de.fraunhofer.iem:CryptoAnalysis:${{ env.GH_ACTION_REF }}:jar:jar-with-dependencies -DoutputDirectory=CryptoAnalysis/build
      working-directory: CryptoAnalysisBuild_98e04be6
      env:
        GH_ACTION_REF: ${{ github.action_ref }}
    # Compile from source when no pre-compiled JAR is available.
    # This also makes the action work for non-releases,
    # meaning any ref that can be resolved by https://github.com/actions/checkout.
    - name: Compile CryptoAnalysis
      if: steps.cache.outputs.cache-hit != 'true' && steps.download.outcome != 'success'
      shell: bash
      run: mvn package -DskipTests=true
      working-directory: CryptoAnalysisBuild_98e04be6

    - name: Copy JAR to convenient path
      if: steps.cache.outputs.cache-hit != 'true'
      shell: bash
      run: cp CryptoAnalysisBuild_98e04be6/CryptoAnalysis/build/CryptoAnalysis-*-jar-with-dependencies.jar CryptoAnalysisBuild_98e04be6/CryptoAnalysis.jar
    - name: Save CryptoAnalysis Cache
      uses: actions/cache/save@v3
      if: steps.cache.outputs.cache-hit != 'true'
      with:
        path: CryptoAnalysisBuild_98e04be6/CryptoAnalysis.jar
        key: ${{ steps.cache-key.outputs.cache-key }}

    - run: |
        java -cp CryptoAnalysisBuild_98e04be6/CryptoAnalysis.jar crypto.HeadlessCryptoScanner \
        --rulesDir ${{ inputs.rulesDir }} \
        --appPath ${{ inputs.appPath }} \
        --reportFormat github_annotation ${{ inputs.reportFormat }} \
        ${{ inputs.cg && format('{0} {1}', '--cg', inputs.cg) || '' }} \
        ${{ inputs.sootPath && format('{0} {1}', '--sootPath', inputs.sootPath) || '' }} \
        ${{ inputs.identifier && format('{0} {1}', '--identifier', inputs.identifier) || '' }} \
        ${{ inputs.reportPath && format('{0} {1}', '--reportPath', inputs.reportPath) || '' }} \
        ${{ inputs.preanalysis == 'true' && '--preanalysis' || '' }} \
        ${{ inputs.visualization  == 'true' && '--visualization ' || '' }} \
        ${{ inputs.providerDetection  == 'true' && '--providerDetection ' || '' }} \
        ${{ inputs.dstats == 'true' && '--dstats' || '' }}
      shell: bash
      # workaround for https://github.com/actions/runner/issues/665
      env:
        INPUT_BASEPATH: ${{ inputs.basePath }}
