<?xml version="1.0" encoding="ASCII"?>
<cryptSL:Domainmodel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cryptSL="http://www.darmstadt.de/tu/crossing/CryptSL" xmlns:types="http://www.eclipse.org/xtext/common/JavaVMTypes">
  <javaType xsi:type="types:JvmGenericType" href="java:/Objects/javax.crypto.Cipher#javax.crypto.Cipher"/>
  <object>
    <objectType xsi:type="types:JvmGenericType" href="java:/Objects/java.lang.String#java.lang.String"/>
    <objectName xsi:type="cryptSL:Object" name="transformation"/>
  </object>
  <object>
    <objectType xsi:type="types:JvmPrimitiveType" href="java:/Primitives#int"/>
    <objectName xsi:type="cryptSL:Object" name="encmode"/>
  </object>
  <object>
    <objectType xsi:type="types:JvmGenericType" href="java:/Objects/javax.crypto.SecretKey#javax.crypto.SecretKey"/>
    <objectName xsi:type="cryptSL:Object" name="key"/>
  </object>
  <object>
    <objectType xsi:type="types:JvmGenericType" href="java:/Objects/java.security.cert.Certificate#java.security.cert.Certificate"/>
    <objectName xsi:type="cryptSL:Object" name="cert"/>
  </object>
  <object>
    <objectType xsi:type="types:JvmGenericType" href="java:/Objects/java.security.spec.AlgorithmParameterSpec#java.security.spec.AlgorithmParameterSpec"/>
    <objectName xsi:type="cryptSL:Object" name="params"/>
  </object>
  <object>
    <objectType xsi:type="types:JvmGenericType" href="java:/Objects/java.security.AlgorithmParameters#java.security.AlgorithmParameters"/>
    <objectName xsi:type="cryptSL:Object" name="param"/>
  </object>
  <object>
    <objectType xsi:type="types:JvmPrimitiveType" href="java:/Primitives#int"/>
    <objectName xsi:type="cryptSL:Object" name="pre_plain_off"/>
  </object>
  <object>
    <objectType xsi:type="types:JvmPrimitiveType" href="java:/Primitives#int"/>
    <objectName xsi:type="cryptSL:Object" name="pre_ciphertext_off"/>
  </object>
  <object>
    <objectType xsi:type="types:JvmPrimitiveType" href="java:/Primitives#int"/>
    <objectName xsi:type="cryptSL:Object" name="plain_off"/>
  </object>
  <object>
    <objectType xsi:type="types:JvmPrimitiveType" href="java:/Primitives#int"/>
    <objectName xsi:type="cryptSL:Object" name="ciphertext_off"/>
  </object>
  <object>
    <objectType xsi:type="types:JvmPrimitiveType" href="java:/Primitives#int"/>
    <objectName xsi:type="cryptSL:Object" name="pre_len"/>
  </object>
  <object>
    <objectType xsi:type="types:JvmPrimitiveType" href="java:/Primitives#int"/>
    <objectName xsi:type="cryptSL:Object" name="len"/>
  </object>
  <object>
    <objectType xsi:type="types:JvmPrimitiveType" href="java:/Primitives#byte"/>
    <objectName xsi:type="cryptSL:Object" name="pre_plaintext"/>
  </object>
  <object>
    <objectType xsi:type="types:JvmPrimitiveType" href="java:/Primitives#byte"/>
    <objectName xsi:type="cryptSL:Object" name="pre_ciphertext"/>
  </object>
  <object>
    <objectType xsi:type="types:JvmPrimitiveType" href="java:/Primitives#byte"/>
    <objectName xsi:type="cryptSL:Object" name="plainText"/>
  </object>
  <object>
    <objectType xsi:type="types:JvmPrimitiveType" href="java:/Primitives#byte"/>
    <objectName xsi:type="cryptSL:Object" name="cipherText"/>
  </object>
  <object>
    <objectType xsi:type="types:JvmGenericType" href="java:/Objects/java.nio.ByteBuffer#java.nio.ByteBuffer"/>
    <objectName xsi:type="cryptSL:Object" name="plainBuffer"/>
  </object>
  <object>
    <objectType xsi:type="types:JvmGenericType" href="java:/Objects/java.nio.ByteBuffer#java.nio.ByteBuffer"/>
    <objectName xsi:type="cryptSL:Object" name="cipherBuffer"/>
  </object>
  <event xsi:type="cryptSL:LabelMethodCall" name="g1">
    <meth>
      <methName href="java:/Objects/javax.crypto.Cipher#javax.crypto.Cipher.getInstance(java.lang.String,java.security.Provider)"/>
      <parList>
        <parameters val="//@object.0/@objectName"/>
      </parList>
    </meth>
  </event>
  <event xsi:type="cryptSL:LabelMethodCall" name="g2">
    <meth>
      <methName href="java:/Objects/javax.crypto.Cipher#javax.crypto.Cipher.getInstance(java.lang.String,java.security.Provider)"/>
      <parList>
        <parameters val="//@object.0/@objectName"/>
        <parameters/>
      </parList>
    </meth>
  </event>
  <event xsi:type="cryptSL:Aggegate" name="Gets" lab="//@event.0 //@event.1"/>
  <event xsi:type="cryptSL:LabelMethodCall" name="i1">
    <meth>
      <methName href="java:/Objects/javax.crypto.Cipher#javax.crypto.Cipher.init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)"/>
      <parList>
        <parameters val="//@object.1/@objectName"/>
        <parameters val="//@object.3/@objectName"/>
      </parList>
    </meth>
  </event>
  <event xsi:type="cryptSL:LabelMethodCall" name="i2">
    <meth>
      <methName href="java:/Objects/javax.crypto.Cipher#javax.crypto.Cipher.init(int,java.security.Key,java.security.AlgorithmParameters)"/>
      <parList>
        <parameters val="//@object.1/@objectName"/>
        <parameters val="//@object.3/@objectName"/>
        <parameters/>
      </parList>
    </meth>
  </event>
  <event xsi:type="cryptSL:LabelMethodCall" name="i3">
    <meth>
      <methName href="java:/Objects/javax.crypto.Cipher#javax.crypto.Cipher.init(int,java.security.Key)"/>
      <parList>
        <parameters val="//@object.1/@objectName"/>
        <parameters val="//@object.2/@objectName"/>
      </parList>
    </meth>
  </event>
  <event xsi:type="cryptSL:LabelMethodCall" name="i4">
    <meth>
      <methName href="java:/Objects/javax.crypto.Cipher#javax.crypto.Cipher.init(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)"/>
      <parList>
        <parameters val="//@object.1/@objectName"/>
        <parameters val="//@object.2/@objectName"/>
        <parameters val="//@object.4/@objectName"/>
      </parList>
    </meth>
  </event>
  <event xsi:type="cryptSL:LabelMethodCall" name="i5">
    <meth>
      <methName href="java:/Objects/javax.crypto.Cipher#javax.crypto.Cipher.init(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)"/>
      <parList>
        <parameters val="//@object.1/@objectName"/>
        <parameters val="//@object.2/@objectName"/>
        <parameters val="//@object.5/@objectName"/>
      </parList>
    </meth>
  </event>
  <event xsi:type="cryptSL:LabelMethodCall" name="i6">
    <meth>
      <methName href="java:/Objects/javax.crypto.Cipher#javax.crypto.Cipher.init(int,java.security.cert.Certificate)"/>
      <parList>
        <parameters val="//@object.1/@objectName"/>
        <parameters val="//@object.2/@objectName"/>
        <parameters val="//@object.4/@objectName"/>
        <parameters/>
      </parList>
    </meth>
  </event>
  <event xsi:type="cryptSL:LabelMethodCall" name="i7">
    <meth>
      <methName href="java:/Objects/javax.crypto.Cipher#javax.crypto.Cipher.init(int,java.security.cert.Certificate)"/>
      <parList>
        <parameters val="//@object.1/@objectName"/>
        <parameters val="//@object.2/@objectName"/>
        <parameters val="//@object.5/@objectName"/>
        <parameters/>
      </parList>
    </meth>
  </event>
  <event xsi:type="cryptSL:LabelMethodCall" name="i8">
    <meth>
      <methName href="java:/Objects/javax.crypto.Cipher#javax.crypto.Cipher.init(int,java.security.Key)"/>
      <parList>
        <parameters val="//@object.1/@objectName"/>
        <parameters val="//@object.2/@objectName"/>
        <parameters/>
      </parList>
    </meth>
  </event>
  <event xsi:type="cryptSL:Aggegate" name="IWOIV" lab="//@event.3 //@event.4 //@event.5 //@event.10"/>
  <event xsi:type="cryptSL:Aggegate" name="IWIV" lab="//@event.5 //@event.6 //@event.7 //@event.8 //@event.9"/>
  <event xsi:type="cryptSL:Aggegate" name="Inits" lab="//@event.11 //@event.12"/>
  <event xsi:type="cryptSL:LabelMethodCall" name="u1">
    <meth leftSide="//@object.13/@objectName">
      <methName href="java:/Objects/javax.crypto.Cipher#javax.crypto.Cipher.update(byte[],int,int)"/>
      <parList>
        <parameters val="//@object.12/@objectName"/>
      </parList>
    </meth>
  </event>
  <event xsi:type="cryptSL:LabelMethodCall" name="u2">
    <meth leftSide="//@object.13/@objectName">
      <methName href="java:/Objects/javax.crypto.Cipher#javax.crypto.Cipher.update(java.nio.ByteBuffer,java.nio.ByteBuffer)"/>
      <parList>
        <parameters val="//@object.12/@objectName"/>
        <parameters val="//@object.6/@objectName"/>
        <parameters/>
      </parList>
    </meth>
  </event>
  <event xsi:type="cryptSL:LabelMethodCall" name="u3">
    <meth>
      <methName href="java:/Objects/javax.crypto.Cipher#javax.crypto.Cipher.update(byte[],int,int)"/>
      <parList>
        <parameters val="//@object.12/@objectName"/>
        <parameters val="//@object.6/@objectName"/>
        <parameters val="//@object.10/@objectName"/>
        <parameters val="//@object.13/@objectName"/>
      </parList>
    </meth>
  </event>
  <event xsi:type="cryptSL:LabelMethodCall" name="u4">
    <meth>
      <methName href="java:/Objects/javax.crypto.Cipher#javax.crypto.Cipher.update(byte[],int,int)"/>
      <parList>
        <parameters val="//@object.12/@objectName"/>
        <parameters val="//@object.6/@objectName"/>
        <parameters val="//@object.10/@objectName"/>
        <parameters val="//@object.13/@objectName"/>
        <parameters val="//@object.7/@objectName"/>
      </parList>
    </meth>
  </event>
  <event xsi:type="cryptSL:LabelMethodCall" name="u5">
    <meth>
      <methName href="java:/Objects/javax.crypto.Cipher#javax.crypto.Cipher.update(java.nio.ByteBuffer,java.nio.ByteBuffer)"/>
      <parList>
        <parameters val="//@object.12/@objectName"/>
        <parameters val="//@object.13/@objectName"/>
      </parList>
    </meth>
  </event>
  <event xsi:type="cryptSL:Aggegate" name="updates" lab="//@event.14 //@event.15 //@event.16 //@event.17 //@event.18"/>
  <event xsi:type="cryptSL:LabelMethodCall" name="f1">
    <meth leftSide="//@object.15/@objectName">
      <methName href="java:/Objects/javax.crypto.Cipher#javax.crypto.Cipher.doFinal(byte[],int,int)"/>
    </meth>
  </event>
  <event xsi:type="cryptSL:LabelMethodCall" name="f2">
    <meth leftSide="//@object.15/@objectName">
      <methName href="java:/Objects/javax.crypto.Cipher#javax.crypto.Cipher.doFinal(byte[],int)"/>
      <parList>
        <parameters val="//@object.14/@objectName"/>
      </parList>
    </meth>
  </event>
  <event xsi:type="cryptSL:LabelMethodCall" name="f3">
    <meth>
      <methName href="java:/Objects/javax.crypto.Cipher#javax.crypto.Cipher.doFinal(byte[],int,int,byte[],int)"/>
      <parList>
        <parameters val="//@object.15/@objectName"/>
        <parameters val="//@object.8/@objectName"/>
      </parList>
    </meth>
  </event>
  <event xsi:type="cryptSL:LabelMethodCall" name="f4">
    <meth leftSide="//@object.15/@objectName">
      <methName href="java:/Objects/javax.crypto.Cipher#javax.crypto.Cipher.doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer)"/>
      <parList>
        <parameters val="//@object.15/@objectName"/>
        <parameters val="//@object.8/@objectName"/>
        <parameters val="//@object.11/@objectName"/>
      </parList>
    </meth>
  </event>
  <event xsi:type="cryptSL:LabelMethodCall" name="f5">
    <meth>
      <methName href="java:/Objects/javax.crypto.Cipher#javax.crypto.Cipher.doFinal(byte[],int,int,byte[])"/>
      <parList>
        <parameters val="//@object.14/@objectName"/>
        <parameters val="//@object.8/@objectName"/>
        <parameters val="//@object.11/@objectName"/>
        <parameters val="//@object.15/@objectName"/>
      </parList>
    </meth>
  </event>
  <event xsi:type="cryptSL:LabelMethodCall" name="f6">
    <meth>
      <methName href="java:/Objects/javax.crypto.Cipher#javax.crypto.Cipher.doFinal(byte[],int,int)"/>
      <parList>
        <parameters val="//@object.14/@objectName"/>
        <parameters val="//@object.8/@objectName"/>
        <parameters val="//@object.11/@objectName"/>
        <parameters val="//@object.15/@objectName"/>
        <parameters val="//@object.9/@objectName"/>
      </parList>
    </meth>
  </event>
  <event xsi:type="cryptSL:LabelMethodCall" name="f7">
    <meth>
      <methName href="java:/Objects/javax.crypto.Cipher#javax.crypto.Cipher.doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer)"/>
      <parList>
        <parameters val="//@object.16/@objectName"/>
        <parameters val="//@object.17/@objectName"/>
      </parList>
    </meth>
  </event>
  <event xsi:type="cryptSL:Aggegate" name="FINWOU" lab="//@event.21 //@event.24 //@event.25 //@event.26"/>
  <event xsi:type="cryptSL:Aggegate" name="DOFINALS" lab="//@event.27 //@event.20 //@event.22 //@event.23"/>
  <order xsi:type="cryptSL:Order" orderop=",">
    <left xsi:type="cryptSL:Order" orderop=",">
      <left orderEv="//@event.2"/>
      <right orderEv="//@event.13"/>
    </left>
    <right xsi:type="cryptSL:SimpleOrder" orderop="+">
      <left orderEv="//@event.27"/>
      <right xsi:type="cryptSL:Order" orderop=",">
        <left orderEv="//@event.19" orderop="+"/>
        <right orderEv="//@event.28"/>
      </right>
    </right>
  </order>
  <req xsi:type="cryptSL:LiteralExpression">
    <cons>
      <name xsi:type="cryptSL:LiteralExpression" value="//@object.0/@objectName"/>
    </cons>
    <litsleft>
      <parameters/>
      <parameters/>
      <parameters/>
      <parameters/>
      <parameters/>
      <parameters/>
      <parameters/>
      <parameters/>
      <parameters/>
      <parameters/>
      <parameters/>
      <parameters/>
    </litsleft>
  </req>
  <req>
    <leftExpression xsi:type="cryptSL:LiteralExpression">
      <cons>
        <name xsi:type="cryptSL:LiteralExpression" value="//@object.0/@objectName"/>
      </cons>
      <litsleft>
        <parameters/>
      </litsleft>
    </leftExpression>
    <operator xsi:type="cryptSL:LogicalImply" IMPLIES="=>"/>
    <rightExpression xsi:type="cryptSL:LiteralExpression">
      <cons>
        <name xsi:type="cryptSL:LiteralExpression" value="//@object.0/@objectName"/>
      </cons>
      <litsleft>
        <parameters/>
        <parameters/>
        <parameters/>
        <parameters/>
        <parameters/>
        <parameters/>
        <parameters/>
        <parameters/>
      </litsleft>
    </rightExpression>
  </req>
  <req>
    <leftExpression xsi:type="cryptSL:LiteralExpression">
      <cons>
        <name xsi:type="cryptSL:LiteralExpression" value="//@object.0/@objectName"/>
      </cons>
      <litsleft>
        <parameters/>
        <parameters/>
      </litsleft>
    </leftExpression>
    <operator xsi:type="cryptSL:LogicalImply" IMPLIES="=>"/>
    <rightExpression xsi:type="cryptSL:LiteralExpression">
      <cons>
        <name xsi:type="cryptSL:LiteralExpression" value="//@object.0/@objectName"/>
      </cons>
      <litsleft>
        <parameters/>
        <parameters/>
        <parameters/>
        <parameters/>
        <parameters/>
        <parameters/>
        <parameters/>
        <parameters/>
      </litsleft>
    </rightExpression>
  </req>
  <req>
    <leftExpression xsi:type="cryptSL:LiteralExpression">
      <cons>
        <name xsi:type="cryptSL:LiteralExpression" value="//@object.0/@objectName"/>
      </cons>
      <litsleft>
        <parameters/>
        <parameters/>
        <parameters/>
        <parameters/>
        <parameters/>
        <parameters/>
        <parameters/>
        <parameters/>
      </litsleft>
    </leftExpression>
    <operator xsi:type="cryptSL:LogicalImply" IMPLIES="=>"/>
    <rightExpression xsi:type="cryptSL:LiteralExpression">
      <cons>
        <name xsi:type="cryptSL:LiteralExpression" value="//@object.0/@objectName"/>
      </cons>
      <litsleft>
        <parameters/>
      </litsleft>
    </rightExpression>
  </req>
  <req>
    <leftExpression xsi:type="cryptSL:LiteralExpression">
      <cons>
        <name xsi:type="cryptSL:LiteralExpression" value="//@object.0/@objectName"/>
      </cons>
      <litsleft>
        <parameters/>
      </litsleft>
    </leftExpression>
    <operator xsi:type="cryptSL:LogicalImply" IMPLIES="=>"/>
    <rightExpression xsi:type="cryptSL:LiteralExpression">
      <cons>
        <name xsi:type="cryptSL:LiteralExpression" value="//@object.0/@objectName"/>
      </cons>
      <litsleft>
        <parameters/>
      </litsleft>
    </rightExpression>
  </req>
  <req>
    <leftExpression xsi:type="cryptSL:LiteralExpression">
      <cons>
        <name xsi:type="cryptSL:LiteralExpression" value="//@object.0/@objectName"/>
      </cons>
      <litsleft>
        <parameters/>
        <parameters/>
        <parameters/>
        <parameters/>
      </litsleft>
    </leftExpression>
    <operator xsi:type="cryptSL:LogicalImply" IMPLIES="=>"/>
    <rightExpression xsi:type="cryptSL:LiteralExpression">
      <cons>
        <name xsi:type="cryptSL:LiteralExpression" value="//@object.0/@objectName"/>
      </cons>
      <litsleft>
        <parameters/>
        <parameters/>
        <parameters/>
      </litsleft>
    </rightExpression>
  </req>
  <req>
    <leftExpression xsi:type="cryptSL:LiteralExpression">
      <cons>
        <name xsi:type="cryptSL:LiteralExpression" value="//@object.0/@objectName"/>
      </cons>
      <litsleft>
        <parameters/>
        <parameters/>
        <parameters/>
        <parameters/>
        <parameters/>
        <parameters/>
        <parameters/>
        <parameters/>
        <parameters/>
        <parameters/>
        <parameters/>
        <parameters/>
        <parameters/>
        <parameters/>
        <parameters/>
        <parameters/>
      </litsleft>
    </leftExpression>
    <operator xsi:type="cryptSL:LogicalImply" IMPLIES="=>"/>
    <rightExpression xsi:type="cryptSL:LiteralExpression">
      <cons>
        <name xsi:type="cryptSL:LiteralExpression" value="//@object.0/@objectName"/>
      </cons>
      <litsleft>
        <parameters/>
      </litsleft>
    </rightExpression>
  </req>
  <req>
    <leftExpression xsi:type="cryptSL:LiteralExpression">
      <cons>
        <name xsi:type="cryptSL:LiteralExpression" value="//@object.0/@objectName"/>
      </cons>
      <litsleft>
        <parameters/>
      </litsleft>
    </leftExpression>
    <operator xsi:type="cryptSL:LogicalImply" IMPLIES="=>"/>
    <rightExpression xsi:type="cryptSL:LiteralExpression">
      <cons>
        <name xsi:type="cryptSL:LiteralExpression" value="//@object.0/@objectName"/>
      </cons>
      <litsleft>
        <parameters/>
        <parameters/>
        <parameters/>
        <parameters/>
        <parameters/>
      </litsleft>
    </rightExpression>
  </req>
  <req>
    <leftExpression xsi:type="cryptSL:LiteralExpression">
      <cons>
        <name xsi:type="cryptSL:LiteralExpression" value="//@object.0/@objectName"/>
      </cons>
      <litsleft>
        <parameters/>
      </litsleft>
    </leftExpression>
    <operator xsi:type="cryptSL:LogicalImply" IMPLIES="=>"/>
    <rightExpression xsi:type="cryptSL:LiteralExpression">
      <cons>
        <name xsi:type="cryptSL:LiteralExpression" value="//@object.0/@objectName"/>
      </cons>
      <litsleft>
        <parameters/>
        <parameters/>
        <parameters/>
      </litsleft>
    </rightExpression>
  </req>
  <req>
    <leftExpression>
      <leftExpression xsi:type="cryptSL:LiteralExpression">
        <cons>
          <name xsi:type="cryptSL:LiteralExpression" value="//@object.0/@objectName"/>
        </cons>
        <litsleft>
          <parameters/>
          <parameters/>
          <parameters/>
          <parameters/>
          <parameters/>
          <parameters/>
          <parameters/>
          <parameters/>
        </litsleft>
      </leftExpression>
      <operator xsi:type="cryptSL:LogicalOperator" AND="&amp;&amp;"/>
      <rightExpression xsi:type="cryptSL:ComparisonExpression">
        <operator xsi:type="cryptSL:ComparingOperator" UNEQUAL="!="/>
        <rightExpression xsi:type="cryptSL:LiteralExpression">
          <cons>
            <name xsi:type="cryptSL:Literal"/>
          </cons>
        </rightExpression>
        <left xsi:type="cryptSL:LiteralExpression">
          <cons>
            <name xsi:type="cryptSL:LiteralExpression" value="//@object.1/@objectName"/>
          </cons>
        </left>
      </rightExpression>
    </leftExpression>
    <operator xsi:type="cryptSL:LogicalImply" IMPLIES="=>"/>
    <rightExpression xsi:type="cryptSL:UnaryPreExpression">
      <operator xsi:type="cryptSL:UnaryOperator" NOT="!"/>
      <enclosedExpression xsi:type="cryptSL:LiteralExpression">
        <cons>
          <name xsi:type="cryptSL:LiteralExpression" value="//@event.11"/>
        </cons>
      </enclosedExpression>
    </rightExpression>
  </req>
  <req predName="generatedKey">
    <parList>
      <parameters>
        <val>
          <name xsi:type="cryptSL:LiteralExpression" value="//@object.2/@objectName"/>
        </val>
      </parameters>
      <parameters>
        <val>
          <name xsi:type="cryptSL:LiteralExpression" value="//@object.0/@objectName"/>
        </val>
      </parameters>
    </parList>
  </req>
  <req xsi:type="cryptSL:UnaryPreExpression">
    <operator xsi:type="cryptSL:UnaryOperator" NOT="!"/>
    <enclosedExpression predName="macced">
      <parList>
        <parameters>
          <val>
            <name xsi:type="cryptSL:LiteralExpression" value="//@object.14/@objectName"/>
          </val>
        </parameters>
        <parameters/>
      </parList>
    </enclosedExpression>
  </req>
  <req xsi:type="cryptSL:ComparisonExpression">
    <leftExpression xsi:type="cryptSL:LiteralExpression">
      <cons>
        <name xsi:type="cryptSL:LiteralExpression" value="//@object.1/@objectName"/>
      </cons>
    </leftExpression>
    <operator xsi:type="cryptSL:ComparingOperator" GREATER_OR_EQUAL=">="/>
    <rightExpression xsi:type="cryptSL:LiteralExpression">
      <cons>
        <name xsi:type="cryptSL:Literal"/>
      </cons>
    </rightExpression>
  </req>
  <req xsi:type="cryptSL:ComparisonExpression">
    <leftExpression xsi:type="cryptSL:LiteralExpression">
      <cons>
        <name xsi:type="cryptSL:LiteralExpression" value="//@object.1/@objectName"/>
      </cons>
    </leftExpression>
    <operator xsi:type="cryptSL:ComparingOperator" LESS_OR_EQUAL="&lt;="/>
    <rightExpression xsi:type="cryptSL:LiteralExpression">
      <cons>
        <name xsi:type="cryptSL:Literal"/>
      </cons>
    </rightExpression>
  </req>
  <req xsi:type="cryptSL:ComparisonExpression">
    <leftExpression xsi:type="cryptSL:LiteralExpression">
      <cons>
        <name xsi:type="cryptSL:LiteralExpression" value="//@object.12/@objectName"/>
      </cons>
    </leftExpression>
    <operator xsi:type="cryptSL:ComparingOperator" GREATER_OR_EQUAL=">="/>
    <rightExpression xsi:type="cryptSL:ArithmeticExpression">
      <leftExpression xsi:type="cryptSL:LiteralExpression">
        <cons>
          <name xsi:type="cryptSL:LiteralExpression" value="//@object.6/@objectName"/>
        </cons>
      </leftExpression>
      <operator xsi:type="cryptSL:ArithmeticOperator" PLUS="+"/>
      <rightExpression xsi:type="cryptSL:LiteralExpression">
        <cons>
          <name xsi:type="cryptSL:LiteralExpression" value="//@object.11/@objectName"/>
        </cons>
      </rightExpression>
    </rightExpression>
  </req>
  <req xsi:type="cryptSL:ComparisonExpression">
    <leftExpression xsi:type="cryptSL:LiteralExpression">
      <cons>
        <name xsi:type="cryptSL:LiteralExpression" value="//@object.13/@objectName"/>
      </cons>
    </leftExpression>
    <operator xsi:type="cryptSL:ComparingOperator" LESS_OR_EQUAL="&lt;="/>
    <rightExpression xsi:type="cryptSL:LiteralExpression">
      <cons>
        <name xsi:type="cryptSL:LiteralExpression" value="//@object.7/@objectName"/>
      </cons>
    </rightExpression>
  </req>
  <req xsi:type="cryptSL:ComparisonExpression">
    <leftExpression xsi:type="cryptSL:LiteralExpression">
      <cons>
        <name xsi:type="cryptSL:LiteralExpression" value="//@object.14/@objectName"/>
      </cons>
    </leftExpression>
    <operator xsi:type="cryptSL:ComparingOperator" LESS_OR_EQUAL="&lt;="/>
    <rightExpression xsi:type="cryptSL:ArithmeticExpression">
      <leftExpression xsi:type="cryptSL:LiteralExpression">
        <cons>
          <name xsi:type="cryptSL:LiteralExpression" value="//@object.8/@objectName"/>
        </cons>
      </leftExpression>
      <operator xsi:type="cryptSL:ArithmeticOperator" PLUS="+"/>
      <rightExpression xsi:type="cryptSL:LiteralExpression">
        <cons>
          <name xsi:type="cryptSL:LiteralExpression" value="//@object.11/@objectName"/>
        </cons>
      </rightExpression>
    </rightExpression>
  </req>
  <req xsi:type="cryptSL:ComparisonExpression">
    <leftExpression xsi:type="cryptSL:LiteralExpression">
      <cons>
        <name xsi:type="cryptSL:LiteralExpression" value="//@object.15/@objectName"/>
      </cons>
    </leftExpression>
    <operator xsi:type="cryptSL:ComparingOperator" LESS_OR_EQUAL="&lt;="/>
    <rightExpression xsi:type="cryptSL:LiteralExpression">
      <cons>
        <name xsi:type="cryptSL:LiteralExpression" value="//@object.9/@objectName"/>
      </cons>
    </rightExpression>
  </req>
  <ens predName="encrypted">
    <parList>
      <parameters>
        <val>
          <name xsi:type="cryptSL:LiteralExpression" value="//@object.14/@objectName"/>
        </val>
      </parameters>
      <parameters>
        <val>
          <name xsi:type="cryptSL:LiteralExpression" value="//@object.15/@objectName"/>
        </val>
      </parameters>
    </parList>
  </ens>
</cryptSL:Domainmodel>
