SPEC java.security.SecureRandom
OBJECTS 
	byte[] seed;
	byte[] genSeed;
	int num;
	java.lang.String randAlg;
	long lSeed;
	byte[] next;
	int numB;

EVENTS
	c1: SecureRandom();
	c2: SecureRandom(seed);
	Cons := c1 | c2;
	
	g1: getInstance(randAlg);
	g2: getInstance(randAlg, _);
	gI: getInstanceStrong();
	Gets := g1 | g2 | gI;
	
	Ins := Gets | Cons;

	gS: genSeed = generateSeed(num);	

	s1: setSeed(seed);
	s2: setSeed(lSeed);
	Seeds := s1 | s2;
	
	ne: next(numB);
	nB: nextBytes(next);
	Nexts := ne | nB;
	
	Ends := gS | Nexts;

ORDER
 	Ins, Seeds?, Ends?
 	
CONSTRAINTS
	randAlg in {"SHA1PRNG", "Windows-PRNG", "NativePRNG", "NativePRNGBlocking", "NativePRNGNonBlocking", "PKCS11"};
	
REQUIRES	
	randomized[seed];
	
ENSURES
	randomized[this] after Ins;
	randomized[genSeed];
	randomized[next];
	randomized[numB];