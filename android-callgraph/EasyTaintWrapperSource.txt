# Packages to include in the analysis
^android.
^java.
^org.apache.http.

<java.util.Stack: java.lang.Object push(java.lang.Object)>

<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>
-<java.util.Map: void clear()>

<java.util.TreeMap: void <init>(java.util.Map)>
<java.util.HashMap: void <init>(java.util.Map)>
<java.util.WeakHashMap: void <init>(java.util.Map)>
<java.util.ConcurrentHashMap: void <init>(java.util.Map)>
<java.util.LinkedHashMap: void <init>(java.util.Map)>

<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.util.Map: java.lang.Object putAll(java.util.Map)>

<java.util.List: boolean add(java.lang.Object)>
<java.util.List: void add(int,<java.lang.Object)>
<java.util.List: boolean addAll(java.util.Collection)>
<java.util.List: boolean addAll(int,java.util.Collection)>
-<java.util.List: void clear()>
<java.util.List: java.util.Iterator iterator()>
~<java.util.List: int size()>

<java.util.Iterator: java.lang.Object next()>

<java.util.ArrayList: void <init>(java.util.Collection)>
<java.util.LinkedList: void <init>(java.util.Collection)>

<java.util.Set: boolean add(java.lang.Object)>
<java.util.Set: boolean addAll(java.util.Collection)>
-<java.util.Set: void clear()>
~<java.util.Set: int size()>

<java.util.Collection: boolean add(java.lang.Object)>
<java.util.Collection: boolean addAll(java.util.Collection)>
-<java.util.Collection: void clear()>
~<java.util.Collection: int size()>

<java.util.Vector: void <init>(java.util.Collection)>
<java.util.Vector: void add(int,java.lang.Object)>
<java.util.Vector: boolean add(java.lang.Object)>
<java.util.Vector: boolean addAll(java.util.Collection)>
<java.util.Vector: void addElement(java.lang.Object)>
-<java.util.Vector: void clear()>
~<java.util.Vector: int size()>

<java.util.Queue: boolean add(java.lang.Object)>
<java.util.Queue: boolean offer(java.lang.Object)>
<java.util.Queue: java.lang.Object remove()>
<java.util.Queue: java.lang.Object poll()>
<java.util.Queue: java.lang.Object element()>
<java.util.Queue: java.lang.Object peek()>
~<java.util.Queue: int size()>

<java.lang.StringBuilder: void <init>(java.lang.String)>
<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>
<java.lang.StringBuilder: java.lang.StringBuilder append(char)>
<java.lang.StringBuilder: java.lang.StringBuilder append(char[])>
<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>
<java.lang.StringBuilder: java.lang.StringBuilder append(double)>
<java.lang.StringBuilder: java.lang.StringBuilder append(float)>
<java.lang.StringBuilder: java.lang.StringBuilder append(int)>
<java.lang.StringBuilder: java.lang.StringBuilder append(long)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>
<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.StringBuffer)>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,boolean)>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char)>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char[])>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char[],int,int)>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,double)>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,float)>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,int)>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,long)>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.Object)>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.String)>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence)>
<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.CharSequence,int,int)>

<java.lang.StringBuffer: void <init>(java.lang.String)>
<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>
<java.lang.StringBuffer: java.lang.StringBuffer append(char)>
<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>
<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>
<java.lang.StringBuffer: java.lang.StringBuffer append(double)>
<java.lang.StringBuffer: java.lang.StringBuffer append(float)>
<java.lang.StringBuffer: java.lang.StringBuffer append(int)>
<java.lang.StringBuffer: java.lang.StringBuffer append(long)>
<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>
<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>
<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.CharSequence)>
<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.CharSequence,int,int)>
<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>
<java.lang.StringBuffer: java.lang.StringBuffer insert(int,boolean)>
<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char)>
<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char[])>
<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char[],int,int)>
<java.lang.StringBuffer: java.lang.StringBuffer insert(int,double)>
<java.lang.StringBuffer: java.lang.StringBuffer insert(int,float)>
<java.lang.StringBuffer: java.lang.StringBuffer insert(int,int)>
<java.lang.StringBuffer: java.lang.StringBuffer insert(int,long)>
<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.Object)>
<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.String)>
<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.CharSequence)>
<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.CharSequence,int,int)>

<java.lang.String: void <init>(byte[])>
<java.lang.String: void <init>(byte[],int,int)>
<java.lang.String: void <init>(byte[],int,int,java.lang.String)>
<java.lang.String: void <init>(byte[],java.lang.String)>
<java.lang.String: void <init>(char[])>
<java.lang.String: void <init>(char[],int,int)>
<java.lang.String: void <init>(int[],int,int)>
<java.lang.String: void <init>(java.lang.String)>
<java.lang.String: void <init>(java.lang.StringBuffer)>
<java.lang.String: void <init>(java.lang.StringBuilder)>

<java.lang.String: java.lang.String valueOf(boolean)>
<java.lang.String: java.lang.String valueOf(char)>
<java.lang.String: java.lang.String valueOf(char[])>
<java.lang.String: java.lang.String valueOf(char[],int,int)>
<java.lang.String: java.lang.String valueOf(double)>
<java.lang.String: java.lang.String valueOf(float)>
<java.lang.String: java.lang.String valueOf(int)>
<java.lang.String: java.lang.String valueOf(long)>
<java.lang.String: java.lang.String valueOf(java.lang.Object)>

<java.lang.String: java.lang.String substring(int)>
<java.lang.String: java.lang.String substring(int,int)>

<java.lang.String: java.lang.String concat(java.lang.String)>

<java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>
<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>

<java.lang.String: char[] toCharArray()>

<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>
<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>

<java.lang.Byte: java.lang.Byte valueOf(byte)>
<java.lang.Byte: java.lang.Byte valueOf(java.lang.String)>
<java.lang.Byte: java.lang.Byte valueOf(java.lang.String,int)>
<java.lang.Byte: long parseByte(java.lang.String)>
<java.lang.Byte: long parseByte(java.lang.String,int)>

<java.lang.Integer: java.lang.String toBinaryString(int)>
<java.lang.Integer: java.lang.String toHexString(int)>
<java.lang.Integer: java.lang.String toOctalString(int)>

<java.lang.Integer: void <init>(int)>
<java.lang.Integer: void <init>(java.lang.String)>
<java.lang.Integer: int parseInt(java.lang.String)>
<java.lang.Integer: int parseInt(java.lang.String,int)>
<java.lang.Integer: java.lang.Integer valueOf(int)>
<java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>
<java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>
<java.lang.Integer: java.lang.Integer toString(int)>
<java.lang.Integer: java.lang.Integer toString(int,int)>

<java.lang.Short: java.lang.Short valueOf(short)>
<java.lang.Short: java.lang.Short valueOf(java.lang.String)>
<java.lang.Short: java.lang.Short valueOf(java.lang.String,int)>
<java.lang.Short: long parseShort(java.lang.String)>
<java.lang.Short: long parseShort(java.lang.String,int)>

<java.lang.Long: void <init>(long)>
<java.lang.Long: void <init>(java.lang.String)>
<java.lang.Long: long parseLong(java.lang.String)>
<java.lang.Long: long parseLong(java.lang.String,int)>
<java.lang.Long: java.lang.Long valueOf(long)>
<java.lang.Long: java.lang.Long valueOf(java.lang.String)>
<java.lang.Long: java.lang.Long valueOf(java.lang.String,int)>
<java.lang.Long: java.lang.String toString(long)>
<java.lang.Long: java.lang.String toString(long,int)>

<java.lang.Float: void <init>(float)>
<java.lang.Float: void <init>(java.lang.String)>
<java.lang.Float: float parseFloat(java.lang.String)>
<java.lang.Float: java.lang.Float valueOf(float)>
<java.lang.Float: java.lang.Float valueOf(java.lang.String)>
<java.lang.Float: java.lang.String toString(float)>

<java.lang.Double: void <init>(double)>
<java.lang.Double: void <init>(java.lang.String)>
<java.lang.Double: double parseDouble(java.lang.String)>
<java.lang.Double: java.lang.Double valueOf(double)>
<java.lang.Double: java.lang.Double valueOf(java.lang.String)>
<java.lang.Double: java.lang.String toString(double)>

<java.lang.Boolean: void <init>(boolean)>
<java.lang.Boolean: void <init>(java.lang.String)>
<java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
<java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>
<java.lang.Boolean: java.lang.String toString(boolean)>

<java.lang.Character: void <init>(char)>
<java.lang.Character: java.lang.Boolean valueOf(char)>
<java.lang.Character: char forDigit(int,int)>

<java.lang.Error: void <init>(java.lang.String)>

<java.lang.Exception: void <init>(java.lang.String)>

<java.lang.ref.Reference: void <init>()>
<java.lang.ref.WeakReference: void <init>(java.lang.Object)>

<java.math.BigDecimal: void <init>(int)>

<java.math.BigInteger: void <init>(byte[])>
<java.math.BigInteger: void <init>(int,byte[])>
<java.math.BigInteger: void <init>(java.lang.String)>
<java.math.BigInteger: void <init>(java.lang.String,int)>
<java.math.BigInteger: java.math.BigInteger valueOf(long)>

<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>
<java.math.BigInteger: java.math.BigInteger and(java.math.BigInteger)>
<java.math.BigInteger: java.math.BigInteger andNot(java.math.BigInteger)>
<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>
<java.math.BigInteger: java.math.BigInteger[] divideAndRemainder(java.math.BigInteger)>
<java.math.BigInteger: java.math.BigInteger gcd(java.math.BigInteger)>
<java.math.BigInteger: java.math.BigInteger max(java.math.BigInteger)>
<java.math.BigInteger: java.math.BigInteger min(java.math.BigInteger)>
<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>
<java.math.BigInteger: java.math.BigInteger modInverse(java.math.BigInteger)>
<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>
<java.math.BigInteger: java.math.BigInteger multiply(java.math.BigInteger)>
<java.math.BigInteger: java.math.BigInteger or(java.math.BigInteger)>
<java.math.BigInteger: java.math.BigInteger xor(java.math.BigInteger)>

<java.io.FileInputStream: void <init>(java.io.File)>
<java.io.FileOutputStream: void <init>(java.lang.String)>

<java.io.StringReader: void <init>(java.lang.String)>
<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>
<java.io.BufferedReader: void <init>(java.io.Reader)>

<java.io.ByteArrayOutputStream: void write(byte[],int,int)>

<java.io.ObjectOutputStream: void writeObject(java.lang.Object>

<java.io.ObjectInputStream: void <init>(java.io.InputStream)>

<java.io.File: void <init>(java.lang.String)>
<java.io.File: void <init>(java.lang.String,java.lang.String)>

<java.text.MessageFormat: void <init>(java.lang.String)>
<java.text.MessageFormat: void <init>(java.lang.String,java.util.Locale)>
<java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>

<java.net.URI: void <init>(java.lang.String)>
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<java.net.URI: java.net.URI create(java.lang.String)>

<java.net.URL: void <init>(java.lang.String)>
<java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String)>
<java.net.URL: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)>
<java.net.URL: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<java.net.URL: void <init>(java.net.URL,java.lang.String)>
<java.net.URL: void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler)>

<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>

<java.util.Collections: java.util.List synchronizedCollection(java.util.Collection)>
<java.util.Collections: java.util.List synchronizedList(java.util.List)>
<java.util.Collections: java.util.List synchronizedMap(java.util.Map)>
<java.util.Collections: java.util.List synchronizedSet(java.util.Set)>
<java.util.Collections: java.util.List synchronizedSortedMap(java.util.SortedMap)>
<java.util.Collections: java.util.List synchronizedSortedSet(java.util.SortedSet)>

<java.util.Collections: java.util.List unmodifiableCollection(java.util.Collection)>
<java.util.Collections: java.util.List unmodifiableList(java.util.List)>
<java.util.Collections: java.util.List unmodifiableMap(java.util.Map)>
<java.util.Collections: java.util.List unmodifiableSet(java.util.Set)>
<java.util.Collections: java.util.List unmodifiableSortedMap(java.util.SortedMap)>
<java.util.Collections: java.util.List unmodifiableSortedSet(java.util.SortedSet)>

<java.util.Collections: java.util.Set singleton(java.lang.Object)>
<java.util.Collections: java.util.List singletonList(java.lang.Object)>
<java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>

<android.content.ContentValues: void put(java.lang.String,java.lang.Byte)>
<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>
<android.content.ContentValues: void put(java.lang.String,java.lang.Float)>
<android.content.ContentValues: void put(java.lang.String,java.lang.Short)>
<android.content.ContentValues: void put(java.lang.String,byte[])>
<android.content.ContentValues: void put(java.lang.String,java.lang.String)>
<android.content.ContentValues: void put(java.lang.String,java.lang.Double)>
<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>
<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>

<android.content.ContentValues: void putAll(android.content.ContentValues)>
<android.content.ContentValues: void putNull(java.lang.String)>

<android.content.Intent: android.content.Intent addFlags(int)>
<android.content.Intent: android.content.Intent setFlags(int)>
<android.content.Intent: android.content.Intent parseIntent(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
<android.content.Intent: android.content.Intent parseUri(java.lang.String,int)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,char)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,short)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,float)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,double)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.CharSequence)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable[])>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean[])>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,short[])>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,char[])>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,int[])>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,float[])>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,double[])>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.CharSequence[])>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)>
<android.content.Intent: android.content.Intent putExtras(android.content.Intent)>
<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>

~<android.content.ContextWrapper: android.content.Context getBaseContext()>

<android.content.IntentFilter: void addAction(java.lang.String)>

<android.database.MatrixCursor: void addRow(java.lang.Object[])>

<android.os.Bundle: void putBoolean(java.lang.String,boolean)>

<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>

<org.apache.http.client.entity.UrlEncodedFormEntity: void <init>(java.util.List,java.lang.String)>
<org.apache.http.client.entity.UrlEncodedFormEntity: void <init>(java.util.List)>

<org.apache.http.entity.StringEntity: void <init>(java.lang.String)>
<org.apache.http.entity.StringEntity: void <init>(java.lang.String,java.nio.charset.Charset)>
<org.apache.http.entity.StringEntity: void <init>(java.lang.String,org.apache.http.entity.ContentType)>
<org.apache.http.entity.StringEntity: void <init>(java.lang.String,java.lang.String)>
<org.apache.http.entity.StringEntity: void <init>(java.lang.String,java.lang.String,java.lang.String)>

<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>
<org.apache.http.client.methods.HttpPost: void <init>(java.net.URI)>

<org.apache.http.HttpEntityEnclosingRequest: void setEntity(org.apache.http.HttpEntity)>

<java.util.Arrays: java.util.List asList(java.lang.Object[])>
<java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>
<java.util.Arrays: java.lang.String toString(java.lang.Object[])>

<java.util.UUID: void <init>(long,long)> 

~<android.app.Activity: android.view.View findViewById(int)>
~<android.app.Activity: void setContentView(int)>
~<android.app.Activity: void setContentView(android.view.View)>
<android.widget.EditText: android.text.Editable getText()>
<android.text.Editable: java.lang.String toString()>

<javax.servlet.ServletResponse: java.io.PrintWriter getWriter()>

# Exclude the ServerSocket stuff
# ~<java.net.ServerSocket: java.net.Socket accept()>
# ~<java.net.Socket: java.io.InputStream getInputStream()>

<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte)>
<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>
<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>
<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>
<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,byte)>
<java.nio.ByteBuffer: java.nio.ByteBuffer putChar(char)>
<java.nio.ByteBuffer: java.nio.ByteBuffer putChar(int,char)>
<java.nio.ByteBuffer: java.nio.ByteBuffer putDouble(double)>
<java.nio.ByteBuffer: java.nio.ByteBuffer putDouble(int,double)>
<java.nio.ByteBuffer: java.nio.ByteBuffer putFloat(float)>
<java.nio.ByteBuffer: java.nio.ByteBuffer putFloat(int,float)>
<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>
<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int,int)>
<java.nio.ByteBuffer: java.nio.ByteBuffer putLong(long)>
<java.nio.ByteBuffer: java.nio.ByteBuffer putLong(int,long)>
<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(short)>
<java.nio.ByteBuffer: java.nio.ByteBuffer putShort(int,short)>

~<android.content.ContextWrapper: android.content.Context getApplicationContext()>

<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>

<java.lang.ProcessBuilder: java.lang.ProcessBuilder command(java.lang.String[])>

<android.os.Parcel: void writeArray(java.lang.Object[])>
<android.os.Parcel: void writeBinderArray(android.os.IBinder[])>
<android.os.Parcel: void writeBinderList(java.util.List)>
<android.os.Parcel: void writeBooleanArray(boolean[])>
<android.os.Parcel: void writeBundle(android.os.Bundle)>
<android.os.Parcel: void writeByte(byte)>
<android.os.Parcel: void writeByteArray(byte[],int,int)>
<android.os.Parcel: void writeByteArray(byte[])>
<android.os.Parcel: void writeCharArray(char[])>
<android.os.Parcel: void writeDouble(double)>
<android.os.Parcel: void writeDoubleArray(double[])>
<android.os.Parcel: void writeException(java.lang.Exception)>
<android.os.Parcel: void writeFileDescriptor(java.io.FileDescriptor)>
<android.os.Parcel: void writeFloat(float)>
<android.os.Parcel: void writeFloatArray(float[])>
<android.os.Parcel: void writeInt(int)>
<android.os.Parcel: void writeIntArray(int[])>
<android.os.Parcel: void writeInterfaceToken(java.lang.String)>
<android.os.Parcel: void writeList(java.util.List)>
<android.os.Parcel: void writeLong(long)>
<android.os.Parcel: void writeLongArray(long[])>
<android.os.Parcel: void writeMap(java.util.Map)>
<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>
<android.os.Parcel: void writeParcelableArray(android.os.Parcelable[],int)>
<android.os.Parcel: void writePersistableBundle(android.os.PersistableBundle)>
<android.os.Parcel: void writeSerializable(java.io.Serializable)>
<android.os.Parcel: void writeSize(android.util.Size)>
<android.os.Parcel: void writeSizeF(android.util.SizeF)>
<android.os.Parcel: void writeSparseArray(android.util.SparseArray)>
<android.os.Parcel: void writeSparseBooleanArray(android.util.SparseBooleanArray)>
<android.os.Parcel: void writeString(java.lang.String)>
<android.os.Parcel: void writeStringArray(java.lang.String[])>
<android.os.Parcel: void writeStringList(java.util.List)>
<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>
<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>
<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>
<android.os.Parcel: void writeTypedList(java.util.List)>
<android.os.Parcel: void writeValue(java.lang.Object)>
<android.os.Parcel: void unmarshall(byte[],int,int)>

<android.graphics.Point: void <init>(int,int)>
<android.graphics.Point: void <init>(android.graphics.Point)>
<android.graphics.PointF: void <init>(float,float)>
<android.graphics.PointF: void <init>(android.graphics.Point)>

<android.telephony.SmsMessage: android.telephony.SmsMessage createFromPdu(byte[])>
<android.telephony.gsm.SmsMessage: android.telephony.gsm.SmsMessage createFromPdu(byte[])>

~<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>

<android.app.DownloadManager$Request: void <init>(android.net.Uri)>
